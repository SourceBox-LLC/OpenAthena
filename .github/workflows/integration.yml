name: Integration Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  integration-test:
    runs-on: ubuntu-latest
    
    # No service containers needed when using dummy tables
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest
      
      - name: Create test catalog with dummy tables
        run: |
          cat > test_catalog.yml << EOF
          test_table:
            type: "dummy"
          
          test_analytics:
            type: "dummy"
            columns:
              - name: "id"
                type: "INTEGER"
              - name: "value"
                type: "DOUBLE"
              - name: "category"
                type: "VARCHAR"
              - name: "date"
                type: "DATE"
            rows:
              - [1, 100.5, "A", "2025-01-01"]
              - [2, 200.3, "B", "2025-01-02"]
              - [3, 300.7, "C", "2025-01-03"]
          
          world_population:
            type: "dummy"
            columns:
              - name: "country"
                type: "VARCHAR"
              - name: "population"
                type: "BIGINT"
              - name: "year"
                type: "INTEGER"
            rows:
              - ["USA", 331900000, 2025]
              - ["China", 1410000000, 2025]
              - ["India", 1390000000, 2025]
          EOF
          
          echo "Created test_catalog.yml with dummy tables"
          
      - name: Run Integration Tests
        run: |
          # Set necessary environment variables for using dummy tables
          export OPENATHENA_USE_DUMMY_DATA=true
          export OPENATHENA_CATALOG_PATH="./test_catalog.yml"
          
          # Start OpenAthena server for testing
          python -m open_athena.main &
          sleep 5  # Give time for server to start
          
          # Run integration tests
          pytest tests/integration/ -v
          
      - name: Collect and upload test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: integration-test-logs
          path: |
            logs/
            integration_tests_report.xml
          retention-days: 7
